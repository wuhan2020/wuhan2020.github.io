{
  "filename": "contributing.md",
  "__html": "<h1>貢献ガイド</h1>\n<!-- TOC -->\n<ul>\n<li><a href=\"#%E8%B2%A2%E7%8C%AE%E3%82%AC%E3%82%A4%E3%83%89\">貢献ガイド</a>\n<ul>\n<li><a href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E6%8F%90%E4%BE%9B%E3%81%99%E3%82%8B\">データを提供する</a></li>\n<li><a href=\"#issue%E3%82%92%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E3%82%8B%E3%80%81%E3%81%BE%E3%81%9F%E3%81%AFPR%E3%82%92%E9%80%81%E3%82%8B\">issueを立ち上げる、またはPRを送る</a>\n<ul>\n<li><a href=\"#0%E6%96%B0%E3%81%97%E3%81%84issue%E3%82%92%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E3%82%8B\">0. 新しいissueを立ち上げる</a></li>\n<li><a href=\"#1%E6%8B%85%E5%BD%93%E3%82%92%E5%90%8D%E4%B9%97%E3%82%8A%E5%87%BA%E3%82%8B\">1. 担当を名乗り出る</a></li>\n<li><a href=\"#2%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E3%83%95%E3%82%A9%E3%83%BC%E3%82%AF%E3%81%99%E3%82%8B\">2. リポジトリをフォークする</a></li>\n<li><a href=\"#3%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%B3%E3%81%99%E3%82%8B\">3. リポジトリをクローンする</a></li>\n<li><a href=\"#4%E6%96%B0%E8%A6%8Fbranch%E3%81%AE%E4%BD%9C%E6%88%90\">4. 新規<code>branch</code>の作成</a></li>\n<li><a href=\"#5%E5%86%85%E5%AE%B9%E3%81%AB%E5%A4%89%E6%9B%B4%E3%82%92%E5%8A%A0%E3%81%88%E3%80%81commit%E3%81%99%E3%82%8B\">5. 内容に変更を加え、<code>commit</code>する</a></li>\n<li><a href=\"#6%E4%B8%8A%E6%B5%81%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E5%A4%89%E6%9B%B4%E3%82%92%E5%90%8C%E6%9C%9F\">6. 上流リポジトリの変更を同期</a></li>\n<li><a href=\"#7%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AB%E6%96%B0%E8%A6%8F%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92push%E3%81%99%E3%82%8B\">7. リモートリポジトリに新規ブランチを<code>push</code>する</a></li>\n<li><a href=\"#8PullRequest%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B\">8. <code>Pull Request</code>を作成する</a></li>\n<li><a href=\"#9%E7%AB%B6%E5%90%88%E3%82%92%E8%A7%A3%E6%B1%BA%E3%81%99%E3%82%8B\">9. 競合を解決する</a></li>\n<li><a href=\"#10%E7%B5%B1%E5%90%88%E7%B5%82%E4%BA%86%E5%BE%8C%E3%81%AB%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%93%E3%81%A8\">10. 統合終了後にできること</a></li>\n</ul>\n</li>\n<li><a href=\"#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E3%83%9C%E3%83%83%E3%83%88%E3%81%AE%E8%AA%AC%E6%98%8E\">プロジェクトのボットの説明</a></li>\n<li><a href=\"#Slack%E3%81%A7%E4%BC%9A%E3%81%84%E3%81%BE%E3%81%97%E3%82%87%E3%81%86\">Slackで会いましょう</a></li>\n</ul>\n</li>\n</ul>\n<!-- /TOC -->\n<h2>データを提供する</h2>\n<p><strong>このリポジトリはデータウェアハウスです。すべてのデータは、スクリプトによって自動でインポートされます。このリポジトリに直接データをコミットしないでください。データの送信については<a href=\"../../ja-ja/dev/information-guide.md\">データ収集ガイド</a>を参照してください。</strong>。</p>\n<blockquote>\n<p>このプラットフォームでは、石墨文档(クラウドベースのオフィススイートサービス)を使用してデータを収集しています。データは、スクリプトが自動生成するプルリクエストによってリポジトリへと反映されます。リポジトリ内のデータは直接更新しないでください。\n多くの参加者が存在するため、全員に完全な編集権限を与えることはありません。編集のためには<a href=\"https://shimo.im/forms/YVJkGrGCWwQPTpqY/fill\">申請フォーム</a>から申請を行ってください。</p>\n</blockquote>\n<h2>issueを立ち上げる、またはPRを送る</h2>\n<p>このガイドでは、GitHubで貢献をする流れについて、できる限り詳細に説明します。<code>issue</code>を立ち上げて問題提起などを行うか、<code>Pull Request</code>を送信して具体的な改善案を提案できます。<strong>wuhan2020はあなたの貢献を歓迎します！</strong></p>\n<h3>0.新しいissueを立ち上げる</h3>\n<p>なにかアイデアを思いついた場合、<a href=\"https://github.com/wuhan2020/wuhan2020/issues\">ここ</a> から新たな<code>issue</code>（議論すべき話題・関心事）を提出してください。wuhan2020のボランティアが対応します。</p>\n<p>新しい<code>issue</code>を作成する際には、以下のどのタイプに当てはまるか選択し、タイトルに含めてください。自動でタグ付が行われます。</p>\n<ul>\n<li>hospital: 病院関係する情報</li>\n<li>factory: 生産・製品に関係する情報</li>\n<li>logistical: 運輸に関係する情報</li>\n<li>hotel: ホテルに関係する情報</li>\n<li>donation：寄付に関係する情報</li>\n<li>clinic：無料の医師相談に関係する情報</li>\n<li>news：この新型コロナウイルスの流行予防に関する最新情報</li>\n<li>doc: ドキュメントについて</li>\n<li>bug： バグレポート</li>\n<li>feature: 新機能の提案</li>\n</ul>\n<h3>1.担当を名乗り出る</h3>\n<blockquote>\n<p><strong>誰もがこのプロジェクトに貢献し、ウイルス克服のために協力できることを心から願っています！</strong></p>\n</blockquote>\n<p><a href=\"https://github.com/wuhan2020/wuhan2020/issues\">Issueリスト</a>から担当したいタスクを見つけたら、<code>/self-assign</code>でアサインしてください。 botが自動で、<code>issue</code>の<code>Assignees</code>（担当者リスト）にあなたを追加します。</p>\n<pre><code class=\"language-text\">/self-assign\n</code></pre>\n<p>下の画像のように行ってください。</p>\n<p><img src=\"/images/docs/self-assign.png\" alt=\"self-assign 解説画像\"></p>\n<h3>2.リポジトリをフォークする</h3>\n<p><a href=\"https://github.com/wuhan2020/wuhan2020\">wuhan2020</a>のリポジトリを開き、あなたのアカウントから<code>Fork</code>してください。</p>\n<p><img src=\"/images/docs/fork-repo.png\" alt=\"リポジトリのFork\"></p>\n<blockquote>\n<p>注意 : 以降はコンソールで実行します。<a href=\"https://git-scm.com/\">Git</a>が必要です。</p>\n</blockquote>\n<h3>3.リポジトリをクローンする</h3>\n<p>GitHubにてあなたのリポジトリ一覧を開き、_wuhan2020_リポジトリが正しくForkできていることを確認してください。\n問題がなければ、以下のコマンドでリポジトリを<code>clone</code>してください。</p>\n<pre><code class=\"language-bash\"><span class=\"hljs-comment\"># replace the XXX with your own user name</span>\ngit <span class=\"hljs-built_in\">clone</span> git@github.com:XXX/wuhan2020.git\n<span class=\"hljs-built_in\">cd</span> wuhan2020\n</code></pre>\n<h3>4.新規<code>branch</code>の作成</h3>\n<blockquote>\n<p>緊急でない限り、masterブランチを直接変更することは推奨されません。</p>\n</blockquote>\n<p>目的に応じた名前をつけて、新しいブランチを作成します。</p>\n<pre><code class=\"language-bash\">git checkout -b my-fix-branch master\n</code></pre>\n<h3>5.内容に変更を加え、<code>commit</code>する</h3>\n<p>ファイルに変更を加えたら、以下のように、変更を記録してください。</p>\n<pre><code class=\"language-bash\">git add .\ngit commit -m <span class=\"hljs-string\">\"hotel: update HOTEL.csv, fix #1\"</span>\n</code></pre>\n<p>このとき、次の点に注意してください。</p>\n<p>(1) 何を行ったか、1行の文で簡潔に説明する。</p>\n<p>(2) 対象の<code>issue</code>と関連付ける。例: <code>fix #1</code>, <code>close #2</code>, <code>#3</code></p>\n<p><code>commit</code>後、さらに変更を加えたい場合は<code>--amend</code>を使用してください。</p>\n<pre><code class=\"language-bash\">git add .\ngit commit --amend -sm <span class=\"hljs-string\">\"hotel: update HOTEL.csv, fix #1\"</span>\n</code></pre>\n<h3>6.上流リポジトリの変更を同期</h3>\n<p><code>Fork</code>元の上流リポジトリ（<a href=\"https://github.com/wuhan2020/wuhan2020\">wuhan2020/wuhan2020</a>）の変更との競合を避けるために、ローカルリポジトリは上流リポジトリに追従する必要があります。</p>\n<pre><code class=\"language-bash\">$ git remote add upstream git@github.com:wuhan2020/wuhan2020.git\n$ git fetch upstream\n</code></pre>\n<p>上流リポジトリにて新しい変更があった場合、最初に<code>rebase</code>してください。</p>\n<pre><code class=\"language-bash\">$ git rebase upstream/master\n</code></pre>\n<h3>7.リモートリポジトリに新規ブランチを<code>push</code>する</h3>\n<pre><code class=\"language-bash\">$ git push -f origin my-fix-branch:my-fix-branch\n</code></pre>\n<h3>8.<code>PullRequest</code>を作成する</h3>\n<p>上流リポジトリに対して<code>pull request</code>を作成します。</p>\n<p><img src=\"/images/docs/pull-request.png\" alt=\"pull-request\"></p>\n<p><img src=\"/images/docs/open-pr.png\" alt=\"open-pr\">\n他の人の<code>review</code>後に、それについて変更を加え、追加の<code>commit</code>を行うことがあります。その際は以下のように行ってください。</p>\n<pre><code class=\"language-bash\">git add .\ngit commit --amend\ngit push -f origin my-fix-branch\n</code></pre>\n<h3>9.競合を解決する</h3>\n<blockquote>\n<p>注意 : 競合が起きなかった場合、この操作は必要ありません。</p>\n</blockquote>\n<ul>\n<li>上流リポジトリと動機</li>\n</ul>\n<pre><code class=\"language-bash\">git fetch upstream\n</code></pre>\n<ul>\n<li><code>rebase</code>の実行</li>\n</ul>\n<pre><code class=\"language-bash\">git rebase upstream/master\n</code></pre>\n<ul>\n<li>手動で競合を解決し、送信する</li>\n</ul>\n<pre><code class=\"language-bash\">git add my-fix-file\ngit rebase --<span class=\"hljs-built_in\">continue</span>\ngit push -f origin my-fix-branch\n</code></pre>\n<h3>10.統合終了後にできること</h3>\n<ul>\n<li><code>master</code>ブランチに戻る</li>\n</ul>\n<pre><code class=\"language-bash\">git checkout master -f\n</code></pre>\n<ul>\n<li><code>master</code>ブランチを上流リポジトリと同期</li>\n</ul>\n<pre><code class=\"language-bash\">git pull --ff upstream master\n</code></pre>\n<ul>\n<li>ローカルブランチの削除（オプション）</li>\n</ul>\n<pre><code class=\"language-bash\">git branch -D my-fix-branch\n</code></pre>\n<ul>\n<li>リモートブランチの削除（オプション）</li>\n</ul>\n<pre><code class=\"language-bash\">git push origin --delete my-fix-branch\n</code></pre>\n<h2>プロジェクトのボットの説明</h2>\n<p>このプロジェクトでは、<code>Menbotics</code>というGitHubボットを利用しています。\n<code>Menbotics</code>は以下のことができます。</p>\n<ul>\n<li><strong>自動<code>issue</code>タグ付け</strong>：詳細は<a href=\"#0%E6%96%B0%E3%81%97%E3%81%84issue%E3%82%92%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E3%82%8B\">0. 新しいissueを立ち上げる</a>を参照</li>\n<li><strong>タスクの申請</strong>：詳細は<a href=\"#1%E6%8B%85%E5%BD%93%E3%82%92%E5%90%8D%E4%B9%97%E3%82%8A%E5%87%BA%E3%82%8B\">1. 担当を名乗り出る</a>を参照</li>\n<li><strong>自動マージ</strong>：PR(Pull Request)が送られたとき、権限を持っているスタッフが<code>/approve</code>コマンドを用いると、自動でマージが行われます。</li>\n</ul>\n<p>bot設定の詳細は<a href=\"./.github/hypertrons.json\">hypertrons.json</a>から確認できます。たとえば、マージ権限の所有者などを確認できます。</p>\n<h2>Slackで会いましょう</h2>\n<p>さらに、私達は<a href=\"https://join.slack.com/t/wuhan2020/shared_invite/enQtOTQxMTU4MzgyNTYwLWIxMTMyNWI4NWE2YTk3NGRjZGJhMjUzNmJhMjg1MDQ3OTEzNDE5NGY4MWFhMjRlYWU4MmE3ZGQyOGU4N2YwMzY\">Slack group</a>にてフロントエンド・バックエンド・データ同期用などのチャンネルを用意しています。技術的なテーマと非技術的なテーマの両方で、より良いコミュニケーションのためにSlackで会いしましょう。目標達成のために、この厳しい期間を共に協力しましょう！</p>\n",
  "link": "/ja-jp/docs/dev/contributing.html",
  "meta": {}
}