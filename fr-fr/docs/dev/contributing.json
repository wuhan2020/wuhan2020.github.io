{
  "filename": "contributing.md",
  "__html": "<!-- TOC -->\n<ul>\n<li><a href=\"#guide-de-contribution\">Guide de contribution</a>\n<ul>\n<li><a href=\"#soumettre-des-donn%C3%A9es\">Soumettre des données</a></li>\n<li><a href=\"#soumettre-une-issue-ou-initialiser-une-pull-request\">Soumettre une issue ou initialiser une pull request</a>\n<ul>\n<li><a href=\"#0-soumettre-une-issue\">0. Soumettre une issue</a></li>\n<li><a href=\"#1-sassigne-une-t%C3%A2che\">1. S'assigne une tâche</a></li>\n<li><a href=\"#2-fork-le-d%C3%A9p%C3%B4t\">2. Fork le dépôt</a></li>\n<li><a href=\"#3-cloner-le-d%C3%A9p%C3%B4t\">3. Cloner le dépôt</a></li>\n<li><a href=\"#4-cr%C3%A9er-une-nouvelle--branch\">4. Créer une nouvelle  <code>branch</code></a></li>\n<li><a href=\"#5-modifier-le-contenu\">5. Modifier le contenu</a></li>\n<li><a href=\"#6-synchroniser-des-modifications-de-upstream-d%C3%A9p%C3%B4t\">6. Synchroniser des modifications de upstream dépôt</a></li>\n<li><a href=\"#7-envoyer-des-nouvelles-modifications\">7. Envoyer des nouvelles modifications</a></li>\n<li><a href=\"#8-cr%C3%A9er-une-nouvelle-pull-request\">8. Créer une nouvelle <code>Pull Request</code></a></li>\n<li><a href=\"#9-g%C3%A9rer-un-conflit-de-merge\">9. Gérer un conflit de merge</a></li>\n<li><a href=\"#10-apr%C3%A8s-le-merge-vous-pouvez\">10. Après le merge, vous pouvez：</a></li>\n</ul>\n</li>\n<li><a href=\"#robot-sp%C3%A9cifications\">Robot spécifications</a></li>\n<li><a href=\"#rejoignez-nous-sur-slack\">Rejoignez-nous sur Slack</a></li>\n</ul>\n</li>\n</ul>\n<!-- /TOC -->\n<h1>Guide de contribution</h1>\n<h2>Soumettre des données</h2>\n<p><strong>C'est le dépôt principal, toutes les importations de données sont effectuées automatiquement par des scripts. Veuillez ne pas envoyer de données directement à ce dépôt. Pour soumettre des données, merci de lire <a href=\"../../zh-cn/dev/README.md\">README</a></strong>。</p>\n<blockquote>\n<p>Cette plateforme utilise Shimo (une suite de productivité basée sur le cloud) pour collecter des données. Les données seront automatiquement soumises au ce dépôt sous forme de Rps par scripts.</p>\n</blockquote>\n<blockquote>\n<p>Parce qu'il y a beaucoup de contributeurs, nous ne donnerons pas l'autorisation de modification à tout le monde, veuillez remplir un formulaire <a href=\"https://shimo.im/forms/YVJkGrGCWwQPTpqY/fill\">ici</a>. Nous vous donnerons l'autorisation appropriée.</p>\n</blockquote>\n<h2>Soumettre une issue ou initialiser une pull request</h2>\n<p>Dans ce guide, nous vous expliquerons comment soumettre une nouvelle issue ou initialiser une pull request. Bienvenue à contribuer au <strong>wuhan2020</strong> !</p>\n<h3>0. Soumettre une issue</h3>\n<p>Si vous avez des bonnes idées, cliquez <a href=\"https://github.com/wuhan2020/wuhan2020/issues\">ici</a> pour créer une nouvelle  <code>issue</code>, nous vous contactons dès que possible.</p>\n<p>Lorsque vous soumettez une nouvelle  <code>issue</code>, veuillez vérifier le type de  <code>issue</code> et l'expliquer dans le titre. L'issue sera classée automatiquement:</p>\n<ul>\n<li>hôpital: information sur hôpitaux</li>\n<li>usine: informations sur la fabrication et le produit</li>\n<li>logistique: informations logistiques</li>\n<li>hôtel: information de hôtel</li>\n<li>donation：information de donation</li>\n<li>clinique：informations de la clinique volontaire</li>\n<li>news：news sur l'anti-épidémiques 2019-nCoV</li>\n<li>doc: documentation</li>\n<li>bug： bug rapport</li>\n<li>fonction: nouvelle fonction</li>\n</ul>\n<h3>1. S'assigne une tâche</h3>\n<blockquote>\n<p><strong>Travaillons ensemble à passer cette période difficile pour lutter contre le coronavirus !!</strong></p>\n</blockquote>\n<p>Sélectionner une tâche dans la liste <a href=\"https://github.com/wuhan2020/wuhan2020/issues\">Liste d'issue</a>, puis s'assigne cette tâche  <code>/self-assign</code>. Le robot du projet vous assigne <code>Assignees</code> automatiquement cette tâche dans <code>issue</code>.</p>\n<pre><code>/self-assign\n</code></pre>\n<p>Voir l'image ci-dessous：</p>\n<p><img src=\"/images/docs/self-assign.png\" alt=\"self-assign 示意图\"></p>\n<h3>2. Fork le dépôt</h3>\n<p>Accéder au  <a href=\"https://github.com/wuhan2020/wuhan2020\">wuhan2020</a>. Fork le dépôt au votre compte.</p>\n<p><img src=\"/images/docs/fork-repo.png\" alt=\"Fork 仓库\"></p>\n<blockquote>\n<p>Nota Bene :  les commandes suivantes sont être effectuées dans la console, <a href=\"https://git-scm.com/\">Git</a> est nécessaire.</p>\n</blockquote>\n<h3>3. Cloner le dépôt</h3>\n<p>Retournez sur votre GitHub page，trouvez le dépôt <em>wuhan2020</em> ，faites une commande pour <code>clone</code> au local, ex:</p>\n<pre><code class=\"language-bash\"><span class=\"hljs-comment\"># replace the XXX with your own user name</span>\ngit <span class=\"hljs-built_in\">clone</span> git@github.com:XXX/wuhan2020.git\n<span class=\"hljs-built_in\">cd</span> wuhan2020\n</code></pre>\n<h3>4. Créer une nouvelle  <code>branch</code></h3>\n<blockquote>\n<p>Il est déconseillé de se développer sur la branche master sauf en cas de restauration urgente.</p>\n</blockquote>\n<p>Selon l'objectif, créez une nouvelle branche et nommez-la de manière appropriée, exécutez comme ceci :</p>\n<pre><code class=\"language-bash\">git checkout -b my-fix-branch master\n</code></pre>\n<h3>5. Modifier le contenu</h3>\n<p>Modifier le file correspondant, puis le soumettre:</p>\n<pre><code class=\"language-bash\">git add .\ngit commit -m <span class=\"hljs-string\">\"hotel: update HOTEL.csv, fix #1\"</span>\n</code></pre>\n<p>Attention :</p>\n<p>(1) clarifier en une phrase ce qui a été fait</p>\n<p>(2) Liée à <code>issue</code>，par exemple <code>fix #1</code> 、<code>close #2</code>、<code>#3</code></p>\n<p>S'il y a des modifications après le <code>commit</code> , utiliser le paramètre <code>--amend</code>：</p>\n<pre><code class=\"language-bash\">git add .\ngit commit --amend -sm <span class=\"hljs-string\">\"hotel: update HOTEL.csv, fix #1\"</span>\n</code></pre>\n<h3>6. Synchroniser des modifications de upstream dépôt</h3>\n<p>Pour éviter la synchronisation des modifications de upstream dépôt (<a href=\"https://github.com/wuhan2020/wuhan2020\">wuhan2020/wuhan2020</a> )，il est nécessaire de synchroniser votre dépôt local avec upstream：</p>\n<pre><code class=\"language-bash\">$ git remote add upstream git@github.com:wuhan2020/wuhan2020.git\n$ git fetch upstream\n</code></pre>\n<p>Si des modifications ont déjà été apportées au upstream, exécuter d'abord <code>rebase</code> :</p>\n<pre><code class=\"language-bash\">$ git rebase upstream/master\n</code></pre>\n<h3>7. Envoyer des nouvelles modifications</h3>\n<pre><code class=\"language-bash\">$ git push -f origin my-fix-branch:my-fix-branch\n</code></pre>\n<h3>8. Créer une nouvelle <code>Pull Request</code></h3>\n<p>Créer une  <code>pull request</code> au upstream en cliquant le bouton &quot;New pull request&quot;. Voir l'image ci-dessous:</p>\n<p><img src=\"/images/docs/pull-request.png\" alt=\"pull-request\"></p>\n<p><img src=\"/images/docs/open-pr.png\" alt=\"open-pr\">\nSi quelqu'un d'autre  <code>review</code> la pull request et doit apporter des changements, il peut faire les modifications dans cette pull request, puis exécuter les commandes suivantes, la PR synchronisera automatiquement <code>commit</code>.</p>\n<pre><code class=\"language-bash\">git add .\ngit commit --amend\ngit push -f origin my-fix-branch\n</code></pre>\n<h3>9. Gérer un conflit de merge</h3>\n<blockquote>\n<p>Nota bene : si pas de conflit, ne pas faire cette étape.</p>\n</blockquote>\n<ul>\n<li>Sync avec upstream dépôt</li>\n</ul>\n<pre><code class=\"language-bash\">git fetch upstream\n</code></pre>\n<ul>\n<li>Exécuter <code>rebase</code>:</li>\n</ul>\n<pre><code class=\"language-bash\">git rebase upstream/master\n</code></pre>\n<ul>\n<li>Résolvez manuellement le conflit, puis le soumettez</li>\n</ul>\n<pre><code class=\"language-bash\">git add my-fix-file\ngit rebase --<span class=\"hljs-built_in\">continue</span>\ngit push -f origin my-fix-branch\n</code></pre>\n<h3>10. Après le merge, vous pouvez：</h3>\n<ul>\n<li>Revenez à  <code>master</code>：</li>\n</ul>\n<pre><code class=\"language-bash\">git checkout master -f\n</code></pre>\n<ul>\n<li>Synchoniser  <code>master</code> avec upstream branche：</li>\n</ul>\n<pre><code class=\"language-bash\">git pull --ff upstream master\n</code></pre>\n<ul>\n<li>Supprimer la branche local (facultatif):</li>\n</ul>\n<pre><code class=\"language-bash\">git branch -D my-fix-branch\n</code></pre>\n<ul>\n<li>Supprimer la branch à distante (facultatif)：</li>\n</ul>\n<pre><code class=\"language-bash\">git push origin --delete my-fix-branch\n</code></pre>\n<h2>Robot spécifications</h2>\n<p>Ce projet a obtenu l'accès au robot GitHub :<code>Menbotics</code>，il fait：</p>\n<ul>\n<li><strong>Taguer <code>Issue</code> automatiquement</strong>：Veuillez consulter <a href=\"#0-soumettre-une-issue\">0. Soumettre une issue</a> pour plus détails</li>\n<li><strong>Assigner la tâche</strong>：Veuillez consulter <a href=\"#1-s-assigne-une-t-che\">1. S'assigne une tâche</a></li>\n<li><strong>Merge automatiquement</strong>：Quand une Pull Request a été soumise, la personne qui a le droit peut <code>/approve</code>  pour merger la branche automatiquement.</li>\n</ul>\n<p>Pour plus détails de configuration, veuillez consulter <a href=\"./.github/hypertrons.json\">hypertrons.json</a>, par exemple, pour savoir qui a le droit de merge.</p>\n<h2>Rejoignez-nous sur Slack</h2>\n<p>Nous avons <a href=\"https://join.slack.com/t/wuhan2020/shared_invite/enQtOTQxMTU4MzgyNTYwLWIxMTMyNWI4NWE2YTk3NGRjZGJhMjUzNmJhMjg1MDQ3OTEzNDE5NGY4MWFhMjRlYWU4MmE3ZGQyOGU4N2YwMzY\">Slack groupe</a>, où ces canaux de frontend backend et la synchronisation des données sont déjà préparés, rejoignez-nous sur Slack pour une meilleure communication sur des thèmes techniques et non techniques.\nTravaillons ensemble à passer cette période difficile pour lutter contre le coronavirus !</p>\n",
  "link": "/fr-fr/docs/dev/contributing.html",
  "meta": {}
}